openapi: 3.0.3
info:
  title: DeviceService API
  description: API для управления IoT-устройствами, типами устройств, командами и телеметрией.
  version: 1.0.0
servers:
  - url: https://localhost:8083/api/v1
    description: Основной сервер DeviceService

tags:
  - name: Устройства
    description: Управление IoT-устройствами умного дома.
  - name: Типы устройств
    description: Управление справочником типов устройств.
  - name: Команды типов устройств
    description: Управление списком команд, поддерживаемых каждым типом устройства.
  - name: Телеметрия типов устройств
    description: Управление списком типов телеметрии, поддерживаемых каждым типом устройства.

paths:
  # === Устройства ===
  /devices:
    get:
      tags: [Устройства]
      summary: Получить список всех устройств для location_id
      operationId: getDevices
      parameters:
        - name: location_id
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: Идентификатор пользователя, чьи правила необходимо получить
      responses:
        '200':
          description: Список устройств успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '500':
          description: Внутренняя ошибка сервера

    post:
      tags: [Устройства]
      summary: Создать новое устройство
      operationId: createDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreate'
      responses:
        '201':
          description: Устройство успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Некорректные данные
        '409':
          description: Устройство с таким serial_number уже существует
        '500':
          description: Внутренняя ошибка сервера

  /devices/{device_id}:
    get:
      tags: [Устройства]
      summary: Получить устройство по ID
      operationId: getDeviceById
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Устройство успешно найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          description: Устройство не найдено
        '500':
          description: Внутренняя ошибка сервера

    patch:
      tags: [Устройства]
      summary: Обновить устройство
      description: Поддерживается обновление name и location_id.
      operationId: updateDeviceName
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceNameUpdate'
      responses:
        '200':
          description: Название устройства успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Некорректные данные запроса
        '404':
          description: Устройство не найдено
        '500':
          description: Внутренняя ошибка сервера

    delete:
      tags: [Устройства]
      summary: Удалить устройство по ID
      operationId: deleteDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Устройство успешно удалено
        '404':
          description: Устройство не найдено
        '500':
          description: Внутренняя ошибка сервера

  /devices/{device_id}/commands:
    post:
      tags: [Устройства]
      summary: Отправить команду устройству
      operationId: sendCommandToDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        '202':
          description: Команда принята к отправке (асинхронная обработка)
        '400':
          description: Недопустимая команда или параметры
        '404':
          description: Устройство не найдено
        '409':
          description: Команда не поддерживается для типа этого устройства
        '500':
          description: Внутренняя ошибка сервера

  # === Типы устройств ===
  /device-types:
    get:
      tags: [Типы устройств]
      summary: Получить список всех типов устройств
      operationId: getDeviceTypes
      responses:
        '200':
          description: Список типов устройств успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceType'
        '500':
          description: Внутренняя ошибка сервера

    post:
      tags: [Типы устройств]
      summary: Создать новый тип устройства
      operationId: createDeviceType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeCreate'
      responses:
        '201':
          description: Тип устройства успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        '400':
          description: Некорректные данные
        '500':
          description: Внутренняя ошибка сервера

  /device-types/{device_type_id}:
    get:
      tags: [Типы устройств]
      summary: Получить тип устройства по ID
      operationId: getDeviceTypeById
      parameters:
        - name: device_type_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Тип устройства успешно найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeWithDetails'
        '404':
          description: Тип устройства не найден
        '500':
          description: Внутренняя ошибка сервера

    patch:
      tags: [Типы устройств]
      summary: Обновить название типа устройства
      operationId: updateDeviceTypeName
      parameters:
        - name: device_type_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeNameUpdate'
      responses:
        '200':
          description: Название типа устройства успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        '400':
          description: Некорректные данные запроса
        '404':
          description: Тип устройства не найден
        '500':
          description: Внутренняя ошибка сервера

    delete:
      tags: [Типы устройств]
      summary: Удалить тип устройства по ID
      operationId: deleteDeviceType
      parameters:
        - name: device_type_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Тип устройства успешно удалён
        '404':
          description: Тип устройства не найден
        '409':
          description: Невозможно удалить — существуют устройства этого типа
        '500':
          description: Внутренняя ошибка сервера

  # === Команды типов устройств ===
  /device-type-commands:
    post:
      tags: [Команды типов устройств]
      summary: Добавить новую команду для типа устройства
      operationId: addDeviceTypeCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeCommandCreate'
      responses:
        '201':
          description: Команда успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeCommand'
        '400':
          description: Некорректные данные
        '404':
          description: Тип устройства не найден
        '409':
          description: Команда с таким именем уже существует для этого типа
        '500':
          description: Внутренняя ошибка сервера

  /device-type-commands/{device_type_command_id}:
    get:
      tags: [Команды типов устройств]
      summary: Получить конкретную команду по ID
      operationId: getDeviceTypeCommand
      parameters:
        - name: device_type_command_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Команда успешно найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeCommand'
        '404':
          description: Команда не найдена
        '500':
          description: Внутренняя ошибка сервера

    patch:
      tags: [Команды типов устройств]
      summary: Обновить команду по ID
      operationId: updateDeviceTypeCommand
      parameters:
        - name: device_type_command_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeCommandUpdate'
      responses:
        '200':
          description: Команда успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeCommand'
        '400':
          description: Некорректные данные
        '404':
          description: Команда не найдена
        '409':
          description: Конфликт — команда с новым именем уже существует для этого типа
        '500':
          description: Внутренняя ошибка сервера

    delete:
      tags: [Команды типов устройств]
      summary: Удалить команду по ID
      operationId: deleteDeviceTypeCommand
      parameters:
        - name: device_type_command_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Команда успешно удалена
        '404':
          description: Команда не найдена
        '500':
          description: Внутренняя ошибка сервера

  /device-types/{device_type_id}/commands:
    get:
      tags: [Команды типов устройств]
      summary: Получить список команд для типа устройства
      operationId: getDeviceTypeCommandsByType
      parameters:
        - name: device_type_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Список команд успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceTypeCommand'
        '404':
          description: Тип устройства не найден
        '500':
          description: Внутренняя ошибка сервера

  # === Телеметрия типов устройств ===
  /device-type-telemetries:
    post:
      tags: [Телеметрия типов устройств]
      summary: Добавить новую телеметрию для типа устройства
      operationId: addDeviceTypeTelemetry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeTelemetryCreate'
      responses:
        '201':
          description: Телеметрия успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeTelemetry'
        '400':
          description: Некорректные данные
        '404':
          description: Тип устройства не найден
        '409':
          description: Телеметрия с таким именем уже существует для этого типа
        '500':
          description: Внутренняя ошибка сервера

  /device-type-telemetries/{device_type_telemetry_id}:
    get:
      tags: [Телеметрия типов устройств]
      summary: Получить телеметрию по ID
      operationId: getDeviceTypeTelemetry
      parameters:
        - name: device_type_telemetry_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Телеметрия успешно найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeTelemetry'
        '404':
          description: Телеметрия не найдена
        '500':
          description: Внутренняя ошибка сервера

    patch:
      tags: [Телеметрия типов устройств]
      summary: Обновить телеметрию по ID
      operationId: updateDeviceTypeTelemetry
      parameters:
        - name: device_type_telemetry_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeTelemetryUpdate'
      responses:
        '200':
          description: Телеметрия успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTypeTelemetry'
        '400':
          description: Некорректные данные
        '404':
          description: Телеметрия не найдена
        '409':
          description: Конфликт — телеметрия с новым именем уже существует для этого типа
        '500':
          description: Внутренняя ошибка сервера

    delete:
      tags: [Телеметрия типов устройств]
      summary: Удалить телеметрию по ID
      operationId: deleteDeviceTypeTelemetry
      parameters:
        - name: device_type_telemetry_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Телеметрия успешно удалена
        '404':
          description: Телеметрия не найдена
        '500':
          description: Внутренняя ошибка сервера

  /device-types/{device_type_id}/telemetries:
    get:
      tags: [Телеметрия типов устройств]
      summary: Получить список телеметрии для типа устройства
      operationId: getDeviceTypeTelemetriesByType
      parameters:
        - name: device_type_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Список телеметрии успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceTypeTelemetry'
        '404':
          description: Тип устройства не найден
        '500':
          description: Внутренняя ошибка сервера

components:
  schemas:
    Device:
      type: object
      required:
        - device_id
        - name
        - location_id
        - device_type_id
        - is_active
        - serial_number
        - created_at
        - updated_at
      properties:
        device_id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: "Гостиная лампа"
        location_id:
          type: integer
          format: int64
          example: 1
        device_type_id:
          type: integer
          format: int64
          example: 3
        is_active:
          type: boolean
          example: true
        serial_number:
          type: string
          example: "SN-123456789"
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    DeviceCreate:
      type: object
      required:
        - name
        - location_id
        - device_type_id
        - serial_number
      properties:
        name:
          type: string
          example: "Кухонный датчик движения"
        location_id:
          type: integer
          format: int64
          example: 2
        device_type_id:
          type: integer
          format: int64
          example: 5
        serial_number:
          type: string
          example: "SN-987654321"

    DeviceNameUpdate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Гостиная лампа"

    DeviceCommand:
      type: object
      required:
        - command_name
      properties:
        command_name:
          type: string
          example: "turn_on"

    DeviceType:
      type: object
      required:
        - device_type_id
        - name
        - created_at
        - updated_at
      properties:
        device_type_id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: "Умная лампа"
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    DeviceTypeCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Умный замок"

    DeviceTypeNameUpdate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Умная лампа"

    DeviceTypeWithDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceType'
        - type: object
          properties:
            commands:
              type: array
              items:
                $ref: '#/components/schemas/DeviceTypeCommand'
            telemetries:
              type: array
              items:
                $ref: '#/components/schemas/DeviceTypeTelemetry'

    DeviceTypeCommand:
      type: object
      required:
        - device_type_command_id
        - device_type_id
        - name
        - created_at
        - updated_at
      properties:
        device_type_command_id:
          type: integer
          format: int64
          readOnly: true
        device_type_id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: "turn_on"
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    DeviceTypeCommandCreate:
      type: object
      required:
        - device_type_id
        - name
      properties:
        device_type_id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: "turn_on"

    DeviceTypeCommandUpdate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "set_rgb_color"

    DeviceTypeTelemetry:
      type: object
      required:
        - device_type_telemetry_id
        - device_type_id
        - telemetry_type
        - name
        - created_at
        - updated_at
      properties:
        device_type_telemetry_id:
          type: integer
          format: int64
          readOnly: true
        device_type_id:
          type: integer
          format: int64
          readOnly: true
        telemetry_type:
          type: string
          example: "temperature"
        name:
          type: string
          example: "Температура"
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    DeviceTypeTelemetryCreate:
      type: object
      required:
        - device_type_id
        - name
        - telemetry_type
      properties:
        device_type_id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: "Температура"
        telemetry_type:
          type: string
          example: "temperature"

    DeviceTypeTelemetryUpdate:
      type: object
      required:
        - name
        - telemetry_type
      properties:
        name:
          type: string
          example: "Температура"
        telemetry_type:
          type: string
          example: "temperature"